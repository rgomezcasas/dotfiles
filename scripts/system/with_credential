#!/usr/bin/env bash

set -euo pipefail

source "$DOTLY_PATH/scripts/core/_main.sh"

##? Export a credential from Bitwarden to an environment variable and run a command
#?? 1.0.0
##?
##? Usage:
##?   with_credential <credential_name> <env_var_name> [command...]
##?
##? Arguments:
##?   credential_name  Name of the credential in Bitwarden
##?   env_var_name     Environment variable name to export the credential to
##?   command          Command to run with the credential (optional, defaults to shell)
##?
##? Examples:
##?   with_credential "GitHub Token" GITHUB_TOKEN
##?   with_credential "API Key" API_KEY npm run deploy
if [[ $# -lt 2 ]]; then
    docs::usage
    exit 1
fi

credential_name="$1"
env_var_name="$2"
shift 2

script::depends_on bw

# Check Bitwarden status and handle login/unlock
bw_status=$(bw status)

if echo "$bw_status" | grep -q '"status":"unauthenticated"'; then
    echo "🔐 Please log in to Bitwarden:"
    if ! bw login; then
        echo "❌ Failed to log in to Bitwarden"
        exit 1
    fi
    bw_status=$(bw status)
fi

if echo "$bw_status" | grep -q '"status":"locked"'; then
    echo "🔓 Please unlock your Bitwarden vault:"
    if ! bw unlock; then
        echo "❌ Failed to unlock Bitwarden vault"
        exit 1
    fi
    echo "✅ Bitwarden vault unlocked"
fi

credential_id=$(bw list items --search "$credential_name" | jq -r '.[0].id // empty')

if [[ -z "$credential_id" ]]; then
    echo "❌ Credential '$credential_name' not found in Bitwarden"
    exit 1
fi

credential_value=$(bw get password "$credential_id")

if [[ -z "$credential_value" ]]; then
    echo "❌ Failed to retrieve credential value"
    exit 1
fi

export "$env_var_name"="$credential_value"

# If command is provided, run it; otherwise start a shell
if [[ $# -gt 0 ]]; then
	exec env "$env_var_name"="$credential_value" "$SHELL" -i -c "$*"
else
    echo "🔐 Starting shell with credential available..."
    exec "$SHELL"
fi
